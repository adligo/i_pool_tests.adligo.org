package org.adligo.i.pool.ldap.models.converters;

import java.math.BigDecimal;
import java.math.BigInteger;

import org.adligo.tests.ATest;

public class ConverterTests extends ATest {

	public void testBigDecimalToLdap() {
		BigDecimalAttributeConverter converter = new BigDecimalAttributeConverter();
		String val = converter.toLdap(new BigDecimal(Integer.MAX_VALUE));
		assertEquals("2147483647", val);
		
		val = converter.toLdap(new BigDecimal(Double.MAX_VALUE));
		assertEquals("179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368", val);
		
		val = converter.toLdap(new BigDecimal(Double.MIN_NORMAL));
		assertEquals("0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201383090232717332404064219215980462331830553327416887204434813918195854283159012511020564067339731035811005152434161553460108856012385377718821130777993532002330479610147442583636071921565046942503734208375250806650616658158948720491179968591639648500635908770118304874799780887753749949451580451605050915399856582470818645113537935804992115981085766051992433352114352390148795699609591288891602992641511063466313393663477586513029371762047325631781485664350872122828637642044846811407613911477062801689853244110024161447421618567166150540154285084716752901903161322778896729707373123334086988983175067838846926092773977972858659654941091369095406136467568702398678315290680984617210924625396728515625", val);
		
		val = converter.toLdap(null);
		assertEquals("", val);
	}
	
	public void testBigDecimalToJava() {
		BigDecimalAttributeConverter converter = new BigDecimalAttributeConverter();
		BigDecimal val = converter.toJava("2147483647");
		assertEquals(new BigDecimal(Integer.MAX_VALUE), val);
		
		val = converter.toJava("179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368");
		assertEquals(new BigDecimal(Double.MAX_VALUE), val);
		
		val = converter.toJava("0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201383090232717332404064219215980462331830553327416887204434813918195854283159012511020564067339731035811005152434161553460108856012385377718821130777993532002330479610147442583636071921565046942503734208375250806650616658158948720491179968591639648500635908770118304874799780887753749949451580451605050915399856582470818645113537935804992115981085766051992433352114352390148795699609591288891602992641511063466313393663477586513029371762047325631781485664350872122828637642044846811407613911477062801689853244110024161447421618567166150540154285084716752901903161322778896729707373123334086988983175067838846926092773977972858659654941091369095406136467568702398678315290680984617210924625396728515625");
		assertEquals(new BigDecimal(Double.MIN_NORMAL), val);
		
		val = converter.toJava(null);
		assertNull(val);
	}
	
	public void testBigIntegerToLdap() {
		BigIntegerAttributeConverter converter = new BigIntegerAttributeConverter();
		String val = converter.toLdap(new BigInteger("" + Integer.MAX_VALUE));
		assertEquals("2147483647", val);
		
		val = converter.toLdap(new BigInteger("" + Long.MAX_VALUE));
		assertEquals("9223372036854775807", val);
		
		val = converter.toLdap(null);
		assertEquals("", val);
	}
	
	public void testBigIntegerToJava() {
		BigIntegerAttributeConverter converter = new BigIntegerAttributeConverter();
		BigInteger val = converter.toJava("2147483647");
		assertEquals(new BigInteger("" + Integer.MAX_VALUE), val);
		
		val = converter.toJava("9223372036854775807");
		assertEquals(new BigInteger("" + Long.MAX_VALUE), val);
		
		val = converter.toJava(null);
		assertNull(val);
	}
	
	public void testBooleanToLdap() {
		BooleanAttributeConverter converter = new BooleanAttributeConverter();
		String val = converter.toLdap(true);
		assertEquals("True", val);
		
		val = converter.toLdap(false);
		assertEquals("False", val);
		
		val = converter.toLdap(null);
		assertEquals("False", val);
	}
	
	public void testBooleanToJava() {
		BooleanAttributeConverter converter = new BooleanAttributeConverter();
		Boolean val = converter.toJava("True");
		assertEquals(Boolean.TRUE, val);
		
		val = converter.toJava("False");
		assertEquals(Boolean.FALSE, val);
		
		val = converter.toJava(null);
		assertEquals(Boolean.FALSE, val);
	}
}
